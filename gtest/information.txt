1) how to install gtest =>
sudo apt install libgtest-dev - this would create "gtest" folder in "/usr/src"
cd /usr/src/gtest
sudo cmake CMakeLists.txt && sudo make
cd /usr/src/gtest/lib
sudo cp libgtest.a libgtest_main.a /usr/lib - here we are copying static library in include path of compiler, so we don't have to use "-L" flag during compilation
( This step is not required since static libraries for gtest are already present in "/usr/lib/x86_64-linux-gnu" folder after build )

2) how to use it =>
write a test cpp file and include this = #include <gtest/gtest.h>
Now you can compile the files and run testcases.
we have these files - calc.h, calc.cpp, calc_test.cpp

compile it using = g++ -o calc_test calc_test.cpp calc.cpp -lgtest -lpthread
run = ./calc_test

to run multiple times = ./calc_test -â€“gtest_repeat=2

3) cmake file for gtest =>
cmake_minimum_required(VERSION 2.6)
 
# Locate GTest
find_package(GTest REQUIRED)
include_directories(${GTEST_INCLUDE_DIRS})
 
# Link runTests with what we want to test and the GTest and pthread library
add_executable(runTests tests.cpp)
target_link_libraries(runTests ${GTEST_LIBRARIES} pthread)

4) To see the files installed by the libgtest-dev package =>

dpkg-query -L libgtest-dev 

this command would show the libgtest.a and libgtest_main.a static libraries with their path.

Basic syntax for find command =
find /usr/lib -name "libgtest*"
find <folder path> -name "<filename>" = "*" can be used to search partial filenames.

5) Read about test fixtures =
https://google.github.io/googletest/primer.html

-----------------------------
References =
1) https://rvarago.medium.com/introduction-to-google-c-unit-testing-3d564c30f3b0
2) https://www.eriksmistad.no/getting-started-with-google-test-on-ubuntu/
3) https://www.geeksforgeeks.org/gtest-framework/